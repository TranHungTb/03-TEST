;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : ledtt
;Version :
;Date    : 10/7/2019
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATtiny13A
;AVR Core Clock frequency: 9.600000 MHz
;Memory model            : Tiny
;External RAM size       : 0
;Data Stack size         : 16
;*******************************************************/
;
;#include <tiny13a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x18
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;#include <delay.h>
;// Declare your global variables here
;
;//Tr?ng thái c?a LED, hay chính là byte mà ta s? g?i qua shiftOut
;#DEFINE clockPin = PINB.0;         //sh 12
;#DEFINE dataPin = PINB.1;               // ds 11
;#DEFINE latchPin = PINB.2;         //st 8
;
;char data;
;char dataArray[8]= {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07};

	.DSEG
;
;void main(void)
; 0000 0024 {

	.CSEG
;PCODE: $0000000A VOL: 0
; 0000 0025 // Declare your local variables here
; 0000 0026 
; 0000 0027 // Crystal Oscillator division factor: 1
; 0000 0028 #pragma optsize-
; 0000 0029 CLKPR=(1<<CLKPCE);
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; 0000 002A CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002B #ifdef _OPTIMIZE_SIZE_
; 0000 002C #pragma optsize+
; 0000 002D #endif
; 0000 002E 
; 0000 002F // Input/Output Ports initialization
; 0000 0030 // Port B initialization
; 0000 0031 // Function: Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0032 DDRB=(0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0033 // State: Bit5=P Bit4=P Bit3=1 Bit2=0 Bit1=0 Bit0=0
; 0000 0034 PORTB=(1<<PORTB5) | (1<<PORTB4) | (1<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0035 
; 0000 0036 // Timer/Counter 0 initialization
; 0000 0037 // Clock source: System Clock
; 0000 0038 // Clock value: Timer 0 Stopped
; 0000 0039 // Mode: Normal top=0xFF
; 0000 003A // OC0A output: Disconnected
; 0000 003B // OC0B output: Disconnected
; 0000 003C TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 003D TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 003E TCNT0=0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 003F OCR0A=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0040 OCR0B=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0041 
; 0000 0042 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0043 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0044 
; 0000 0045 // External Interrupt(s) initialization
; 0000 0046 // INT0: Off
; 0000 0047 // Interrupt on any change on pins PCINT0-5: Off
; 0000 0048 GIMSK=(0<<INT0) | (0<<PCIE);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0049 MCUCR=(0<<ISC01) | (0<<ISC00);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 004A 
; 0000 004B // Analog Comparator initialization
; 0000 004C // Analog Comparator: Off
; 0000 004D // The Analog Comparator's positive input is
; 0000 004E // connected to the AIN0 pin
; 0000 004F // The Analog Comparator's negative input is
; 0000 0050 // connected to the AIN1 pin
; 0000 0051 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0052 ADCSRB=(0<<ACME);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0053 // Digital input buffer on AIN0: On
; 0000 0054 // Digital input buffer on AIN1: On
; 0000 0055 DIDR0=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0056 
; 0000 0057 // ADC initialization
; 0000 0058 // ADC disabled
; 0000 0059 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 005A 
; 0000 005B 
; 0000 005C while (1)
;PCODE: $0000002B VOL: 0
; 0000 005D       {
; 0000 005E 
; 0000 005F       //Sáng tu?n t?
; 0000 0060 //  ledStatus = 0;
; 0000 0061 //  //m?c d?nh là không có dèn nào sáng h?t (0 = 0b00000000)
; 0000 0062 //  for (i = 0; i < 8; i++) {
; 0000 0063 //    ledStatus = (ledStatus << 1) | 1;
; 0000 0064 //    //Ð?y toàn b? các bit qua trái 1 bit và c?ng bit có giá tr? là 1 ? bit 0
; 0000 0065 //
; 0000 0066 //    /**
; 0000 0067 //      B?t bu?c ph?i có d? shiftOut
; 0000 0068 //    **/
; 0000 0069 //
; 0000 006A //    PORTB.2 = 0;
; 0000 006B //    //các dèn LED s? không sáng khi b?n digital LOW
; 0000 006C //
; 0000 006D //    //ShiftOut ra IC
; 0000 006E //    shiftOut(PORTB.1, PORTB.0, MSBFIRST, ledStatus);
; 0000 006F //
; 0000 0070 //    PORTB.2 = 1;//các dèn LED s? sáng v?i tr?ng thái v?a du?c c?p nh?p
; 0000 0071 //
; 0000 0072 //    /**
; 0000 0073 //      K?t thúc b?t bu?c ph?i có
; 0000 0074 //    **/
; 0000 0075 //
; 0000 0076 //    delay_ms(500); // D?ng chuong trình kho?ng 500 mili giây d? th?y các hi?u ?ng c?a dèn LED
; 0000 0077 //  }
; 0000 0078 
; 0000 0079 
; 0000 007A   //T?t tu?n t?
; 0000 007B //  for (int i = 0;i<8;i++) {
; 0000 007C //    ledStatus <<= 1; //Ð?y t?t c? các bit qua bên trái 1 bit
; 0000 007D //    PORTB.2 = 0;
; 0000 007E //    shiftOut(PORTB.1, PORTB.0, MSBFIRST, ledStatus);
; 0000 007F //    PORTB.2 = 1;
; 0000 0080 //    delay(500);
; 0000 0081 //  }
; 0000 0082 
; 0000 0083 
; 0000 0084       // Place your code here
; 0000 0085 //      while (1)
; 0000 0086 //    {
; 0000 0087 //
; 0000 0088 //      if(PINB.4==0){
; 0000 0089 //      i++;
; 0000 008A //      if(i>=3){i=0;}
; 0000 008B //      }
; 0000 008C //
; 0000 008D //
; 0000 008E //      if(i==1){
; 0000 008F //       while(0<i1<9){
; 0000 0090 //      i++;
; 0000 0091 //      PORTB=a[7];
; 0000 0092 //      PORTB=a[2];
; 0000 0093 //      delay_ms(500);
; 0000 0094 //      }
; 0000 0095 //       while(i1<17&&i1>8){
; 0000 0096 //      i++;
; 0000 0097 //      PORTB=a[0];
; 0000 0098 //      PORTB=a[5];
; 0000 0099 //
; 0000 009A //      delay_ms(500); }
; 0000 009B //
; 0000 009C //
; 0000 009D //      }
; 0000 009E //       if(i==3){
; 0000 009F //      PORTB=a[6];
; 0000 00A0 //      delay_ms(2);
; 0000 00A1 //      PORTB=a[2];
; 0000 00A2 //      }
; 0000 00A3 //
; 0000 00A4 //      }
; 0000 00A5 //.}
; 0000 00A6 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 00A7 
; 0000 00A8 
; 0000 00A9 
; 0000 00AA 
; 0000 00AB 
; 0000 00AC //void shiftOut(char myDataPin, char myClockPin, char myDataOut) {
; 0000 00AD //  // This shifts 8 bits out MSB first,
; 0000 00AE //  //on the rising edge of the clock,
; 0000 00AF //  //clock idles low
; 0000 00B0 //
; 0000 00B1 //  //internal function setup
; 0000 00B2 //  int i=0;
; 0000 00B3 //  int pinState;
; 0000 00B4 //  pinMode(myClockPin, OUTPUT);
; 0000 00B5 //  pinMode(myDataPin, OUTPUT);
; 0000 00B6 //
; 0000 00B7 //  //clear everything out just in case to
; 0000 00B8 //  //prepare shift register for bit shifting
; 0000 00B9 //  digitalWrite(myDataPin, 0);
; 0000 00BA //  digitalWrite(myClockPin, 0);
; 0000 00BB //
; 0000 00BC //  //for each bit in the byte myDataOut?
; 0000 00BD //  //NOTICE THAT WE ARE COUNTING DOWN in our for loop
; 0000 00BE //  //This means that %00000001 or "1" will go through such
; 0000 00BF //  //that it will be pin Q0 that lights.
; 0000 00C0 //  for (i=7; i>=0; i--)  {
; 0000 00C1 //    digitalWrite(myClockPin, 0);
; 0000 00C2 //
; 0000 00C3 //    //if the value passed to myDataOut and a bitmask result
; 0000 00C4 //    // true then... so if we are at i=6 and our value is
; 0000 00C5 //    // %11010100 it would the code compares it to %01000000
; 0000 00C6 //    // and proceeds to set pinState to 1.
; 0000 00C7 //    if ( myDataOut & (1<<i) ) {
; 0000 00C8 //      pinState= 1;
; 0000 00C9 //    }
; 0000 00CA //    else {
; 0000 00CB //      pinState= 0;
; 0000 00CC //    }
; 0000 00CD //
; 0000 00CE //    //Sets the pin to HIGH or LOW depending on pinState
; 0000 00CF //    digitalWrite(myDataPin, pinState);
; 0000 00D0 //    //register shifts bits on upstroke of clock pin
; 0000 00D1 //    digitalWrite(myClockPin, 1);
; 0000 00D2 //    //zero the data pin after shift to prevent bleed through
; 0000 00D3 //    digitalWrite(myDataPin, 0);
; 0000 00D4 //  }
; 0000 00D5 //
; 0000 00D6 //  //stop shifting
; 0000 00D7 //  digitalWrite(myClockPin, 0);
; 0000 00D8 //}
; 0000 00D9 //
; 0000 00DA 
; 0000 00DB 
; 0000 00DC 
; 0000 00DD void delay(unsigned char time){
;	time -> R16
; 0000 00DE //Chuong trinh tao tre 50ms
; 0000 00DF         unsigned char t;
;PCODE: $0000002E VOL: 0
; 0000 00E0         for(t=0;t<time;t++){
;	time -> R16
;	t -> Y+0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 00E1                 TMOD=0x01;
;PCODE: $00000039 VOL: 0
; 0000 00E2                 TH0=0x3c;
;PCODE: $0000003A VOL: 0
; 0000 00E3                 TL0=0xb0;
;PCODE: $0000003B VOL: 0
; 0000 00E4                 TR0=1;
;PCODE: $0000003C VOL: 0
; 0000 00E5                 while(!TF0);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 00E6                 TF0=TR0=0;
;PCODE: $00000042 VOL: 0
; 0000 00E7         }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 00E8 }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
